name: Release Chart
on:
  workflow_dispatch:
    inputs:
      releaseversion:
        description: Release version
        required: true
        type: string
        default: X.Y.Z
jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          check-latest: true
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
      - name: Run chart-testing (lint)
        run: ct lint --config .ct.yaml
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: .
          config: .cr.yaml
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        run: |
          echo ${{ secrets.CT_OCI_GITHUB_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin
      - name: Push Charts to GHCR
        run: |
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://ghcr.io/cloudtooling/helm-charts
          done
          -   name: tag-and-release
          id: tag-and-release
          uses: avakar/tag-and-release@v1
          with:
              release_name: ${{ github.event.inputs.releaseversion }}
              tag_name: ${{ github.event.inputs.releaseversion }}
              draft: true
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add release of codelists zip to github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.tag-and-release.outputs.upload_url }}
          asset_path: codelists/target/codelists-${{ github.event.inputs.releaseversion }}.jar
          asset_name: 3rdpartyGenCode-codelists.jar
          asset_content_type: application/zip
